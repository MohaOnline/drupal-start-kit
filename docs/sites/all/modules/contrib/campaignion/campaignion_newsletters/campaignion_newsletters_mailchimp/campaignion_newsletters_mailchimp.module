<?php

/**
 * @file
 * Campaignion newsletter Mailchimp integration module.
 */

use \Drupal\campaignion_newsletters_mailchimp\MailChimp;
use \Drupal\campaignion_newsletters\Subscription;

/**
 * Implements hook_menu().
 */
function campaignion_newsletters_mailchimp_menu() {
  // Webhook handler.
  $items[MailChimp::WEBHOOK_PATH . '/%/%'] = [
    'title' => 'Webhook',
    'page callback' => 'campaignion_newsletters_mailchimp_webhook',
    'page arguments' => [1],
    'access callback' => 'campaignion_newsletters_mailchimp_webhook_access',
    'access arguments' => [1, 2],
    'type' => MENU_CALLBACK,
    'delivery callback' => 'little_helpers_deliver_json',
  ];

  return $items;
}

/**
 * Implements hook_campaignion_newsletters_provider_info().
 */
function campaignion_newsletters_mailchimp_campaignion_newsletters_provider_info() {
  $keys = variable_get('mailchimp_api_keys', array());
  $providers = array();
  foreach ($keys as $name => $key) {
    $providers['MailChimp-' . $name] = array(
      'class' => '\\Drupal\\campaignion_newsletters_mailchimp\\MailChimp',
      'params' => array('name' => $name, 'key' => $key),
    );
  }
  return $providers;
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Implements hook_form_campaignion_newsletters_admin_settings_alter().
 */
function campaignion_newsletters_mailchimp_form_campaignion_newsletters_admin_settings_alter(&$form, &$form_state) {
  form_load_include($form_state, 'php', 'campaignion_newsletters_mailchimp', 'includes/admin_pages');
  _campaignion_newsletters_mailchimp_form_campaignion_newsletters_admin_settings_alter($form, $form_state);
}

/**
 * Get API-key by machine name.
 */
function campaignion_newsletters_mailchimp_get_key($name) {
  $keys = variable_get('mailchimp_api_keys', array());
  if (isset($keys[$name])) {
    return $keys[$name];
  }
}

/**
 * Access callback: MailChimp webhooks.
 */
function campaignion_newsletters_mailchimp_webhook_access($list_id, $hash) {
  return $hash === MailChimp::webhookHash($list_id);
}

/**
 * Page callback for MailChimps webhooks.
 */
function campaignion_newsletters_mailchimp_webhook($list_id) {
  if (!empty($_POST['type'])) {
    switch ($_POST['type']) {
      case 'unsubscribe':
      case 'cleaned':
        if (!empty($_POST['data']['email'])) {
          Subscription::byData($list_id, $_POST['data']['email'])->delete(TRUE);
        }
        break;
    }
  }
  return ['status' => 'OK'];
}
