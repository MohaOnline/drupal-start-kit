<?php

/**
 * Implements hook_requirements().
 */

function lr_ciam_requirements($phase) {
        $requirements = array();  
        if ($phase == 'install') {
            if (module_exists('lr_social_login')) {
            $requirements['drupal'] = array(    
            'description' => 'Please Uninstall "User Registration and Management" Plugin to Activate LoginRadius CIAM.',
            'severity' => REQUIREMENT_ERROR
            );
        return $requirements;
        }
    }
}
/**
 * Implements hook_uninstall().
 */
function lr_ciam_uninstall() {        
  $deleted_keys = array(
    'lr_ciam_terms_and_condition_html',
    'lr_ciam_forgot_password_template',
    'lr_ciam_email_verification_template',
    'lr_ciam_custom_options',
    'lr_ciam_enable_login_on_email_verification',
    'lr_ciam_prompt_password_on_social_login',
    'lr_ciam_ask_required_field_on_traditional_login',
    'lr_ciam_ask_email_always_for_unverified',
    'lr_ciam_enable_user_name',  
    'lr_ciam_minify_js_css',
    'lr_ciam_display_password_strength',
    'lr_ciam_site_name',
    'lr_ciam_apikey',
    'lr_ciam_apisecret', 
    'lr_ciam_disable_traditional_login',
    'lr_ciam_exist_phone_number',
    'lr_ciam_force_registration',
    'lr_ciam_link_account',
    'lr_ciam_update_profile',
    'lr_ciam_debug_mode', 
    'lr_ciam_userlogin_redirect',
    'lr_ciam_custom_redirection',
    'lr_ciam_user_fields',
    'lr_ciam_profile_fields',     
    'lr_auto_hide_messages',
    'lr_ciam_instant_link_login_email_template',
    'lr_ciam_sms_template',     
    'lr_ciam_sms_template_phone_verification',  
    'lr_ciam_sms_template_one_time_passcode',
    'lr_ciam_sms_template_2fa',    
    'lr_hosted_page_enable',    
    'lr_sso_enable',
    'lr_ciam_instant_otp_login',
    'lr_ciam_instant_link_login'
  );
  foreach($deleted_keys as $key){
  //  variable_del($key);
  }
}

/**
 * Implements hook_schema().
 */
function lr_ciam_schema() {   
  if (!db_field_exists('users', 'lr_ciam_uid')) {
    db_add_field('users', 'lr_ciam_uid', array(
      'type' => 'varchar',
      'length' => 255,
      'not null' => FALSE,
      'default' => '',
    ));
  }
  if (db_table_exists('loginradius_mapusers') && !db_field_exists('loginradius_mapusers', 'user_id')) {
    db_add_field('loginradius_mapusers', 'user_id', array(
      'type' => 'int',
      'length' => 11,
      'not null' => FALSE,
      'default' => 0,
    ));
  }
   if(!db_table_exists('loginradius_mapusers')){
  $schema['loginradius_mapusers'] = array(
    'description' => 'Stores Engage linked account information.',
    'fields' => array(
      'aid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'Authmap ID of the authmap table.',
      ),
      'provider' => array(
        'type' => 'varchar',
        'length' => 30,
        'not null' => TRUE,
        'description' => 'The provider\'s machine name.',
      ),
      'provider_id' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'The provider\'s unique id.',
      ),
      'user_id' => array(
        'type' => 'int',
        'length' => 11,
        'not null' => FALSE,
        'default' => 0,

      ),
    ),
    'primary key' => array('aid'),
  );
    return $schema;
  }
  db_update('system')
    ->fields(array('weight' => 4))
    ->condition('name', 'lr_ciam', '=')
    ->execute();

}
