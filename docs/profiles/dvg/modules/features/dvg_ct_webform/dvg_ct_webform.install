<?php

/**
 * Implements hook_schema_alter().
 */
function dvg_ct_webform_schema_alter(&$schema) {
  $schema['webform']['fields'] += _dvg_ct_webform_schema_fields();
}

/**
 * Implements hook_install().
 */
function dvg_ct_webform_install() {

  // Alter default Encrypt configuration.
  db_query("UPDATE {encrypt_config} SET method = 'openssl', provider = 'drupal_variable' WHERE name = 'default'");

  // Add fields to the webform table.
  $schema = drupal_get_schema('webform');
  $fields = _dvg_ct_webform_schema_fields();
  foreach ($fields as $field_name => $field) {
    db_add_field('webform', $field_name, $schema['fields'][$field_name]);
  }

  // Add our forms to IFE.
  _dvg_global_add_ife_form_id('webform_client_form_*');

  // Set FEA settings.
  variable_set('fea__form_id__webform_component_edit_form', array(
    'form_id' => 'webform_component_edit_form',
    'invert' => 0,
    'elements' => array(
      'name' => array(
        'tree' => array(
          0 => 'name',
        ),
        'type' => 'textfield',
        'roles' => array(
          'editor' => 'editor',
          'super editor' => 'super editor',
        ),
      ),
      'form_key' => array(
        'tree' => array(
          0 => 'form_key',
        ),
        'type' => 'textfield',
        'roles' => array(
          'editor' => 'editor',
          'super editor' => 'super editor',
        ),
      ),
      'extra|description' => array(
        'tree' => array(
          0 => 'extra',
          1 => 'description',
        ),
        'type' => 'textarea',
        'roles' => array(
          'editor' => 'editor',
          'super editor' => 'super editor',
        ),
      ),
      'display|title_display' => array(
        'tree' => array(
          0 => 'display',
          1 => 'title_display',
        ),
        'type' => 'select',
        'roles'  => array(),
      ),
      'display|private' => array(
        'tree' => array(
          0 => 'display',
          1 => 'private',
        ),
        'type' => 'checkbox',
        'roles'  => array(),
      ),
      'display|wrapper_classes' => array(
        'tree' => array(
          0 => 'display',
          1 => 'wrapper_classes',
        ),
        'type' => 'textfield',
        'roles'  => array(),
      ),
      'display|css_classes' => array(
        'tree' => array(
          0 => 'display',
          1 => 'css_classes',
        ),
        'type' => 'textfield',
        'roles'  => array(),
      ),
      'display|cols' => array(
        'tree' => array(
          0 => 'display',
          1 => 'cols',
        ),
        'type' => 'textfield',
        'roles'  => array(),
      ),
      'display|rows' => array(
        'tree' => array(
          0 => 'display',
          1 => 'rows',
        ),
        'type' => 'textfield',
        'roles'  => array(),
      ),
      'display|resizable' => array(
        'tree' => array(
          0 => 'display',
          1 => 'resizable',
        ),
        'type' => 'checkbox',
        'roles'  => array(),
      ),
      'display|placeholder' => array(
        'tree' => array(
          0 => 'display',
          1 => 'placeholder',
        ),
        'type' => 'textfield',
        'roles' => array(
          'editor' => 'editor',
          'super editor' => 'super editor',
        ),
      ),
      'display|disabled' => array(
        'tree' => array(
          0 => 'display',
          1 => 'disabled',
        ),
        'type' => 'checkbox',
        'roles'  => array(),
      ),
      'display' => array(
        'tree' => array(
          0 => 'display',
        ),
        'type' => 'fieldset',
        'roles' => array(
          'editor' => 'editor',
          'super editor' => 'super editor',
        ),
      ),
      'validation|required' => array(
        'tree' => array(
          0 => 'validation',
          1 => 'required',
        ),
        'type' => 'checkbox',
        'roles' => array(
          'editor' => 'editor',
          'super editor' => 'super editor',
        ),
      ),
      'validation' => array(
        'tree' => array(
          0 => 'validation',
        ),
        'type' => 'fieldset',
        'roles' => array(
          'editor' => 'editor',
          'super editor' => 'super editor',
        ),
      ),
      'position|weight' => array(
        'tree' => array(
          0 => 'position',
          1 => 'weight',
        ),
        'type' => 'textfield',
        'roles'  => array(),
      ),
      'position' => array(
        'tree' => array(
          0 => 'position',
        ),
        'type' => 'fieldset',
        'roles'  => array(),
      ),
      'value' => array(
        'tree' => array(
          0 => 'value',
        ),
        'type' => 'textarea',
        'roles' => array(
          'editor' => 'editor',
          'super editor' => 'super editor',
        ),
      ),
      'actions|submit' => array(
        'tree' => array(
          0 => 'actions',
          1 => 'submit',
        ),
        'type' => 'submit',
        'roles' => array(
          'editor' => 'editor',
          'super editor' => 'super editor',
        ),
      ),
      'actions' => array(
        'tree' => array(
          0 => 'actions',
        ),
        'type' => 'actions',
        'roles' => array(
          'editor' => 'editor',
          'super editor' => 'super editor',
        ),
      ),
      'encryption|encrypt' => array(
        'tree' => array(
          0 => 'encryption',
          1 => 'encrypt',
        ),
        'type' => 'checkbox',
        'roles'  => array(),
      ),
      'encryption' => array(
        'tree' => array(
          0 => 'encryption',
        ),
        'type' => 'fieldset',
        'roles'  => array(),
      ),
      'display|hidden_type' => array(
        'tree' => array(
          0 => 'display',
          1 => 'hidden_type',
        ),
        'type' => 'radios',
        'roles'  => array(),
      ),
      'display|collapsible' => array(
        'tree' => array(
          0 => 'display',
          1 => 'collapsible',
        ),
        'type' => 'checkbox',
        'roles'  => array(),
      ),
      'display|collapsed' => array(
        'tree' => array(
          0 => 'display',
          1 => 'collapsed',
        ),
        'type' => 'checkbox',
        'roles'  => array(),
      ),
      'extra|directory' => array(
        'tree' => array(
          0 => 'extra',
          1 => 'directory',
        ),
        'type' => 'textfield',
        'roles'  => array(),
      ),
      'validation|size' => array(
        'tree' => array(
          0 => 'validation',
          1 => 'size',
        ),
        'type' => 'textfield',
        'roles'  => array(),
      ),
      'validation|extensions|types|webimages' => array(
        'tree' => array(
          0 => 'validation',
          1 => 'extensions',
          2 => 'types',
          3 => 'webimages',
        ),
        'type' => 'checkboxes',
        'roles'  => array(),
      ),
      'validation|extensions|types|desktopimages' => array(
        'tree' => array(
          0 => 'validation',
          1 => 'extensions',
          2 => 'types',
          3 => 'desktopimages',
        ),
        'type' => 'checkboxes',
        'roles'  => array(),
      ),
      'validation|extensions|types|documents' => array(
        'tree' => array(
          0 => 'validation',
          1 => 'extensions',
          2 => 'types',
          3 => 'documents',
        ),
        'type' => 'checkboxes',
        'roles'  => array(),
      ),
      'validation|extensions|types|media' => array(
        'tree' => array(
          0 => 'validation',
          1 => 'extensions',
          2 => 'types',
          3 => 'media',
        ),
        'type' => 'checkboxes',
        'roles'  => array(),
      ),
      'validation|extensions|types|archives' => array(
        'tree' => array(
          0 => 'validation',
          1 => 'extensions',
          2 => 'types',
          3 => 'archives',
        ),
        'type' => 'checkboxes',
        'roles'  => array(),
      ),
      'validation|extensions|addextensions' => array(
        'tree' => array(
          0 => 'validation',
          1 => 'extensions',
          2 => 'addextensions',
        ),
        'type' => 'textfield',
        'roles'  => array(),
      ),
      'validation|extensions' => array(
        'tree' => array(
          0 => 'validation',
          1 => 'extensions',
        ),
        'type' => 'webform_file_extensions',
        'roles'  => array(),
      ),
      'display|width' => array(
        'tree' => array(
          0 => 'display',
          1 => 'width',
        ),
        'type' => 'textfield',
        'roles'  => array(),
      ),
      'display|field_prefix' => array(
        'tree' => array(
          0 => 'display',
          1 => 'field_prefix',
        ),
        'type' => 'textfield',
        'roles' => array(
          'editor' => 'editor',
          'super editor' => 'super editor',
        ),
      ),
      'display|field_suffix' => array(
        'tree' => array(
          0 => 'display',
          1 => 'field_suffix',
        ),
        'type' => 'textfield',
        'roles' => array(
          'editor' => 'editor',
          'super editor' => 'super editor',
        ),
      ),
      'validation|unique' => array(
        'tree' => array(
          0 => 'validation',
          1 => 'unique',
        ),
        'type' => 'checkbox',
        'roles'  => array(),
      ),
      'validation|maxlength' => array(
        'tree' => array(
          0 => 'validation',
          1 => 'maxlength',
        ),
        'type' => 'textfield',
        'roles'  => array(),
      ),
      'extra|items' => array(
        'tree' => array(
          0 => 'extra',
          1 => 'items',
        ),
        'type' => 'textarea',
        'roles' => array(
          'editor' => 'editor',
          'super editor' => 'super editor',
        ),
      ),
      'extra|options_source' => array(
        'tree' => array(
          0 => 'extra',
          1 => 'options_source',
        ),
        'type' => 'select',
        'roles'  => array(),
      ),
      'extra|multiple' => array(
        'tree' => array(
          0 => 'extra',
          1 => 'multiple',
        ),
        'type' => 'checkbox',
        'roles' => array(
          'editor' => 'editor',
          'super editor' => 'super editor',
        ),
      ),
      'display|aslist' => array(
        'tree' => array(
          0 => 'display',
          1 => 'aslist',
        ),
        'type' => 'checkbox',
        'roles' => array(
          'editor' => 'editor',
          'super editor' => 'super editor',
        ),
      ),
      'display|optrand' => array(
        'tree' => array(
          0 => 'display',
          1 => 'optrand',
        ),
        'type' => 'checkbox',
        'roles' => array(
          'editor' => 'editor',
          'super editor' => 'super editor',
        ),
      ),
      'user_email' => array(
        'tree' => array(
          0 => 'user_email',
        ),
        'type' => 'checkbox',
        'roles'  => array(),
      ),
      'display|datepicker' => array(
        'tree' => array(
          0 => 'display',
          1 => 'datepicker',
        ),
        'type' => 'checkbox',
        'roles' => array(
          'editor' => 'editor',
          'super editor' => 'super editor',
        ),
      ),
      'display|year_textfield' => array(
        'tree' => array(
          0 => 'display',
          1 => 'year_textfield',
        ),
        'type' => 'checkbox',
        'roles' => array(
          'editor' => 'editor',
          'super editor' => 'super editor',
        ),
      ),
      'validation|start_date' => array(
        'tree' => array(
          0 => 'validation',
          1 => 'start_date',
        ),
        'type' => 'textfield',
        'roles' => array(
          'editor' => 'editor',
          'super editor' => 'super editor',
        ),
      ),
      'validation|end_date' => array(
        'tree' => array(
          0 => 'validation',
          1 => 'end_date',
        ),
        'type' => 'textfield',
        'roles' => array(
          'editor' => 'editor',
          'super editor' => 'super editor',
        ),
      ),
      'display|type' => array(
        'tree' => array(
          0 => 'display',
          1 => 'type',
        ),
        'type' => 'radios',
        'roles' => array(
          'editor' => 'editor',
          'super editor' => 'super editor',
        ),
      ),
      'display|decimals' => array(
        'tree' => array(
          0 => 'display',
          1 => 'decimals',
        ),
        'type' => 'select',
        'roles'  => array(),
      ),
      'display|separator' => array(
        'tree' => array(
          0 => 'display',
          1 => 'separator',
        ),
        'type' => 'select',
        'roles'  => array(),
      ),
      'display|point' => array(
        'tree' => array(
          0 => 'display',
          1 => 'point',
        ),
        'type' => 'select',
        'roles'  => array(),
      ),
      'validation|integer' => array(
        'tree' => array(
          0 => 'validation',
          1 => 'integer',
        ),
        'type' => 'checkbox',
        'roles'  => array(),
      ),
      'validation|min' => array(
        'tree' => array(
          0 => 'validation',
          1 => 'min',
        ),
        'type' => 'textfield',
        'roles' => array(
          'editor' => 'editor',
          'super editor' => 'super editor',
        ),
      ),
      'validation|max' => array(
        'tree' => array(
          0 => 'validation',
          1 => 'max',
        ),
        'type' => 'textfield',
        'roles' => array(
          'editor' => 'editor',
          'super editor' => 'super editor',
        ),
      ),
      'validation|step' => array(
        'tree' => array(
          0 => 'validation',
          1 => 'step',
        ),
        'type' => 'textfield',
        'roles' => array(
          'editor' => 'editor',
          'super editor' => 'super editor',
        ),
      ),
      'analysis|excludezero' => array(
        'tree' => array(
          0 => 'analysis',
          1 => 'excludezero',
        ),
        'type' => 'checkbox',
        'roles'  => array(),
      ),
      'analysis' => array(
        'tree' => array(
          0 => 'analysis',
        ),
        'type' => 'fieldset',
        'roles'  => array(),
      ),
      'display|display_on' => array(
        'tree' => array(
          0 => 'display',
          1 => 'display_on',
        ),
        'type' => 'select',
        'roles'  => array(),
      ),
      'extra|next_page_label' => array(
        'tree' => array(
          0 => 'extra',
          1 => 'next_page_label',
        ),
        'type' => 'textfield',
        'roles'  => array(),
      ),
      'extra|prev_page_label' => array(
        'tree' => array(
          0 => 'extra',
          1 => 'prev_page_label',
        ),
        'type' => 'textfield',
        'roles'  => array(),
      ),
      'position|pid' => array(
        'tree' => array(
          0 => 'position',
          1 => 'pid',
        ),
        'type' => 'hidden',
        'roles'  => array(),
      ),
    ),
  ));

  variable_set('fea__form_id__webform_configure_form', array(
    'form_id' => 'webform_configure_form',
    'invert' => 0,
    'elements' => array(
      'submission|confirmation' => array(
        'tree' => array(
          0 => 'submission',
          1 => 'confirmation',
        ),
        'type' => 'text_format',
        'roles' => array(
          'editor' => 'editor',
          'super editor' => 'super editor',
        ),
      ),
      'submission|redirection|redirect' => array(
        'tree' => array(
          0 => 'submission',
          1 => 'redirection',
          2 => 'redirect',
        ),
        'type' => 'radios',
        'roles'  => array(),
      ),
      'submission|redirection|redirect_url' => array(
        'tree' => array(
          0 => 'submission',
          1 => 'redirection',
          2 => 'redirect_url',
        ),
        'type' => 'textfield',
        'roles'  => array(),
      ),
      'submission|redirection' => array(
        'tree' => array(
          0 => 'submission',
          1 => 'redirection',
        ),
        'type' => 'item',
        'roles'  => array(),
      ),
      'submission|total_submit_limit|enforce_total_limit' => array(
        'tree' => array(
          0 => 'submission',
          1 => 'total_submit_limit',
          2 => 'enforce_total_limit',
        ),
        'type' => 'radios',
        'roles'  => array(),
      ),
      'submission|total_submit_limit|total_submit_limit' => array(
        'tree' => array(
          0 => 'submission',
          1 => 'total_submit_limit',
          2 => 'total_submit_limit',
        ),
        'type' => 'textfield',
        'roles'  => array(),
      ),
      'submission|total_submit_limit|total_submit_interval' => array(
        'tree' => array(
          0 => 'submission',
          1 => 'total_submit_limit',
          2 => 'total_submit_interval',
        ),
        'type' => 'select',
        'roles'  => array(),
      ),
      'submission|total_submit_limit' => array(
        'tree' => array(
          0 => 'submission',
          1 => 'total_submit_limit',
        ),
        'type' => 'item',
        'roles'  => array(),
      ),
      'submission|submit_limit|enforce_limit' => array(
        'tree' => array(
          0 => 'submission',
          1 => 'submit_limit',
          2 => 'enforce_limit',
        ),
        'type' => 'radios',
        'roles'  => array(),
      ),
      'submission|submit_limit|submit_limit' => array(
        'tree' => array(
          0 => 'submission',
          1 => 'submit_limit',
          2 => 'submit_limit',
        ),
        'type' => 'textfield',
        'roles'  => array(),
      ),
      'submission|submit_limit|submit_interval' => array(
        'tree' => array(
          0 => 'submission',
          1 => 'submit_limit',
          2 => 'submit_interval',
        ),
        'type' => 'select',
        'roles'  => array(),
      ),
      'submission|submit_limit' => array(
        'tree' => array(
          0 => 'submission',
          1 => 'submit_limit',
        ),
        'type' => 'item',
        'roles'  => array(),
      ),
      'submission|status' => array(
        'tree' => array(
          0 => 'submission',
          1 => 'status',
        ),
        'type' => 'radios',
        'roles' => array(
          'editor' => 'editor',
          'super editor' => 'super editor',
        ),
      ),
      'submission' => array(
        'tree' => array(
          0 => 'submission',
        ),
        'type' => 'fieldset',
        'roles' => array(
          'editor' => 'editor',
          'super editor' => 'super editor',
        ),
      ),
      'role_control|roles' => array(
        'tree' => array(
          0 => 'role_control',
          1 => 'roles',
        ),
        'type' => 'checkboxes',
        'roles' => array(
          'editor' => 'editor',
          'super editor' => 'super editor',
        ),
      ),
      'progressbar|webform_progressbar_style' => array(
        'tree' => array(
          0 => 'progressbar',
          1 => 'webform_progressbar_style',
        ),
        'type' => 'checkboxes',
        'roles'  => array(),
      ),
      'progressbar|progressbar_label_first' => array(
        'tree' => array(
          0 => 'progressbar',
          1 => 'progressbar_label_first',
        ),
        'type' => 'textfield',
        'roles' => array(
          'editor' => 'editor',
          'super editor' => 'super editor',
        ),
      ),
      'progressbar|progressbar_label_confirmation' => array(
        'tree' => array(
          0 => 'progressbar',
          1 => 'progressbar_label_confirmation',
        ),
        'type' => 'textfield',
        'roles' => array(
          'editor' => 'editor',
          'super editor' => 'super editor',
        ),
      ),
      'progressbar' => array(
        'tree' => array(
          0 => 'progressbar',
        ),
        'type' => 'fieldset',
        'roles' => array(
          'editor' => 'editor',
          'super editor' => 'super editor',
        ),
      ),
      'preview|preview' => array(
        'tree' => array(
          0 => 'preview',
          1 => 'preview',
        ),
        'type' => 'checkbox',
        'roles' => array(
          'editor' => 'editor',
          'super editor' => 'super editor',
        ),
      ),
      'preview|settings|preview_title' => array(
        'tree' => array(
          0 => 'preview',
          1 => 'settings',
          2 => 'preview_title',
        ),
        'type' => 'textfield',
        'roles'  => array(),
      ),
      'preview|settings|preview_next_button_label' => array(
        'tree' => array(
          0 => 'preview',
          1 => 'settings',
          2 => 'preview_next_button_label',
        ),
        'type' => 'textfield',
        'roles'  => array(),
      ),
      'preview|settings|preview_prev_button_label' => array(
        'tree' => array(
          0 => 'preview',
          1 => 'settings',
          2 => 'preview_prev_button_label',
        ),
        'type' => 'textfield',
        'roles'  => array(),
      ),
      'preview|settings|preview_message' => array(
        'tree' => array(
          0 => 'preview',
          1 => 'settings',
          2 => 'preview_message',
        ),
        'type' => 'text_format',
        'roles'  => array(),
      ),
      'preview|settings|preview_components' => array(
        'tree' => array(
          0 => 'preview',
          1 => 'settings',
          2 => 'preview_components',
        ),
        'type' => 'select',
        'roles'  => array(),
      ),
      'preview|settings' => array(
        'tree' => array(
          0 => 'preview',
          1 => 'settings',
        ),
        'type' => 'container',
        'roles'  => array(),
      ),
      'preview' => array(
        'tree' => array(
          0 => 'preview',
        ),
        'type' => 'fieldset',
        'roles'  => array(),
      ),
      'advanced|allow_draft' => array(
        'tree' => array(
          0 => 'advanced',
          1 => 'allow_draft',
        ),
        'type' => 'checkbox',
        'roles'  => array(),
      ),
      'advanced|auto_save' => array(
        'tree' => array(
          0 => 'advanced',
          1 => 'auto_save',
        ),
        'type' => 'checkbox',
        'roles'  => array(),
      ),
      'advanced|submit_notice' => array(
        'tree' => array(
          0 => 'advanced',
          1 => 'submit_notice',
        ),
        'type' => 'checkbox',
        'roles'  => array(),
      ),
      'advanced|submit_text' => array(
        'tree' => array(
          0 => 'advanced',
          1 => 'submit_text',
        ),
        'type' => 'textfield',
        'roles'  => array(),
      ),
      'advanced|next_serial' => array(
        'tree' => array(
          0 => 'advanced',
          1 => 'next_serial',
        ),
        'type' => 'textfield',
        'roles'  => array(),
      ),
      'advanced' => array(
        'tree' =>  array(
          0 => 'advanced',
        ),
        'type' => 'fieldset',
        'roles'  => array(),
      ),
      'actions|submit' => array(
        'tree' => array(
          0 => 'actions',
          1 => 'submit',
        ),
        'type' => 'submit',
        'roles' => array(
          'editor' => 'editor',
          'super editor' => 'super editor',
        ),
      ),
      'actions' => array(
        'tree' => array(
          0 => 'actions',
        ),
        'type' => 'actions',
        'roles' => array(
          'editor' => 'editor',
          'super editor' => 'super editor',
        ),
      ),
    ),
  ));

  dvg_roles_and_permissions_set_permissions('dvg_ct_webform');

}

/**
 * Helper function that returns the new fields.
 */
function _dvg_ct_webform_schema_fields() {
  return array(
    'exclude_empty_preview' => array(
      'type' => 'int',
      'size' => 'tiny',
      'not null' => TRUE,
      'default' => 0,
    ),
    'hide_back_to_form' => array(
      'type' => 'int',
      'size' => 'tiny',
      'not null' => TRUE,
      'default' => 0,
    ),
  );
}

/**
 * Implements hook_uninstall().
 */
function dvg_ct_webform_uninstall() {
  $fields = _dvg_ct_webform_schema_fields();
  foreach ($fields as $field_name => $field) {
    db_drop_field('webform', $field_name);
  }
}

/**
 * Create new 'hide "Back to form" url' setting.
 */
function dvg_ct_webform_update_7002() {
  $schema = drupal_get_schema('webform');
  $fields = _dvg_ct_webform_schema_fields();
  foreach ($fields as $field_name => $field) {
    db_add_field('webform', $field_name, $schema['fields'][$field_name]);
  }
}

/**
 * Add webform_client_form_* forms to the IFE settings.
 */
function dvg_ct_webform_update_7003() {
  _dvg_global_add_ife_form_id('webform_client_form_*');
}

/**
 * Switch to Mcrypt AES (CBC Mode) for encryption because Mcrypt Rijndael 256 is deprecated.
 *
 * Removed as we use the newer and better openssl method. See 7016.
 */
//function dvg_ct_webform_update_7004() {
//  db_query("UPDATE {encrypt_config} SET method = 'mcrypt_aes_cbc' WHERE name = 'default' AND method = 'mcrypt_rij_256'");
//}

/**
 * Helper function to convert line breaks to paragraphs and breaks.
 */
function _dvg_ct_webform_convert_email_templates($body) {
  $body = preg_replace('/\n(\s*\n)+/', '</p><p>', $body);
  $body = preg_replace('/\n/', '<br />', $body);
  $body = str_replace("</p>", "</p>\n\r", $body);
  $body = str_replace("<br />", "<br />\n", $body);
  $body = '<p>' . $body . '</p>';
  return $body;
}

/**
 * Update webform email templates.
 *
 * Converting line-breaks to HTML paragraph tags and breaks.
 */
function dvg_ct_webform_update_7013() {
  // Get all webform templates.
  $query = db_select('webform_emails', 'we')
    ->fields('we', array('nid', 'eid', 'template'))
    ->condition('we.template', 'default', '!=');
  $results = $query->execute();
  foreach ($results as $row) {
    // Just in case a site already uses HTML templates,
    // we check for existing tags.
    if ($row->template == strip_tags($row->template)) {
      db_update('webform_emails')
        ->fields(array(
          'template' => _dvg_ct_webform_convert_email_templates($row->template),
        ))
        ->condition('nid', $row->nid, '=')
        ->condition('eid', $row->eid, '=')
        ->execute();
    }
  }

  // Also convert all the body fields used in user emails like
  // password resets etc to html variants. Convert unset bodies to dutch text.
  $user_email_body_var_names = array(
    'user_mail_register_admin_created_body',
    'user_mail_register_pending_approval_body',
    'user_mail_register_no_approval_required_body',
    'user_mail_password_reset_body',
    'user_mail_status_activated_body',
    'user_mail_status_blocked_body',
    'user_mail_cancel_confirm_body',
    'user_mail_status_canceled_body',
  );
  foreach ($user_email_body_var_names as $var_name) {
    $var = variable_get($var_name, _user_mail_text(str_replace("user_mail_", "", $var_name), i18n_language('nl'), array(), FALSE));
    if ($var == strip_tags(variable_get($var_name, _user_mail_text(str_replace("user_mail_", "", $var_name), i18n_language('nl'), array(), FALSE)))) {
      variable_set($var_name, _dvg_ct_webform_convert_email_templates($var));
    }
  }
  // Also convert all unset subject fields used in
  // user emails like password resets etc to dutch variants.
  $user_email_subject_var_names = array(
    'user_mail_register_admin_created_subject',
    'user_mail_register_pending_approval_subject',
    'user_mail_register_no_approval_required_subject',
    'user_mail_password_reset_subject',
    'user_mail_status_activated_subject',
    'user_mail_status_blocked_subject',
    'user_mail_cancel_confirm_subject',
    'user_mail_status_canceled_subject',
  );
  foreach ($user_email_subject_var_names as $var_name) {
    $var = variable_get($var_name, _user_mail_text(str_replace("user_mail_", "", $var_name), i18n_language('nl'), array(), FALSE));
    if (variable_get($var_name, '') == '') {
      variable_set($var_name, $var);
    }
  }
}

/**
 * Add empty exclude empty field for preview.
 */
function dvg_ct_webform_update_7015() {
  $schema = drupal_get_schema('webform');
  $fields = _dvg_ct_webform_schema_fields();
  foreach ($fields as $field_name => $field) {
    if (!db_field_exists('webform', $field_name)) {
      db_add_field('webform', $field_name, $schema['fields'][$field_name]);
    }
  }
}

/**
 * Switch to OpenSSL for encryption because Mcrypt AES (CBC Mode) is deprecated.
 */
function dvg_ct_webform_update_7016() {
  db_query("UPDATE {encrypt_config} SET method = 'openssl' WHERE name = 'default' AND method = 'mcrypt_aes_cbc'");
}

/**
 * Migrate encrypted submitted data from Mcrypt AES  to OpenSSL encryption.
 */
function dvg_ct_webform_update_7017() {
  $data = db_query('SELECT nid, sid, cid, no, data FROM {webform_submitted_data}')->fetchAll();
  foreach ($data as $row) {
    $data = @unserialize($row->data);
    if (is_array($data) && isset($data['method']) && $data['method'] === 'mcrypt_aes_cbc') {
      db_update('webform_submitted_data')
        ->fields(
          array(
            'data' => encrypt(decrypt($row->data, array('base64' => TRUE)), array('base64' => TRUE)),
          )
        )
        ->condition('nid', $row->nid)
        ->condition('sid', $row->sid)
        ->condition('cid', $row->cid)
        ->condition('no', $row->no)
        ->execute();
    }
  }
}

/**
 * Re-encrypt encrypted files with OpenSSL encryption.
 */
function dvg_ct_webform_update_7018() {
  $fids = db_query('SELECT fid FROM {file_managed} WHERE uri LIKE :ef', array(':ef' => ENCRYPTED_FILES_SCHEME . '://%'))->fetchCol();

  $files = file_load_multiple($fids);
  foreach ($files as $file) {
    try {
      file_unmanaged_save_data(file_get_contents($file->uri), $file->uri, FILE_EXISTS_REPLACE);
    }
    catch (Exception $exception) {
      // Remove file because we can't re-encrypt it anymore.
      $arguments = array(
        '%uri' => $file->uri,
        '%fid' => $file->fid,
        '%message' => $exception->getMessage(),
      );
      file_delete($file, TRUE);
      watchdog('dvg_ct_webform', 'Unable to re-encrypt file %uri with fid %fid. This file has been deleted. The complete error message is: %message', $arguments, WATCHDOG_ERROR);
    }
  }
}

/**
 * Migrate time component defaults for new patch.
 * See https://www.drupal.org/node/3016143
 */
function dvg_ct_webform_update_7019() {
  // Migrate from "wfc" prefix to "webform" prefix.
  $vars = array(
    'time_default_index_hour',
    'time_default_index_minute',
    'time_default_index_second',
  );
  foreach($vars as $var) {
    if ($value = variable_get('wfc_' . $var)) {
      variable_set('webform_' . $var, $value);
    }
    variable_del('wfc_' . $var);
  }
}
