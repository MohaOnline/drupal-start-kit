<?php
define('DVG_DEMO_PREDEFINED_HEADING_1', '
  .r-top,
  .l-breadcrumbs,
  .r-footer,
  .pagernav .pager li.pager-current,
  .section-list ul li a:before,
  .section-list ul li a:active,
  .section-list.js ul li:active,
  .frontpage-contact .contact-information.left .appointment-button,
  .search-block .views-exposed-form .views-exposed-widget.views-submit-button input[type="submit"],
  .link-file .file,
  .group-buttons .field:first-child .btn-small,
input[type="button"], input[type="reset"], .webform-submit, .views-exposed-form input[type="submit"], .form-actions input[type="submit"], .btn, .group-buttons .field:first-child .btn-small, .form-actions .button-primary, .frontpage-contact .contact-information.left .appointment-button, .popup-content .close-button {
    background-color: [VALUE];
  }
  a,
  a:visited,
  .submit-link,
  .form-actions .webform-previous.form-submit,
  .section-list ul li a,
  .section-list.js ul li a {
    color: [VALUE];
  }
  body.front .r-content .menu-content-block,
  .pagernav .pager li.pager-current,
  .webform-progressbar,
  .appointments-progressbar,
  .webform-progressbar .webform-progressbar-page,
  .webform-progressbar .appointments-progressbar-page,
  .appointments-progressbar .webform-progressbar-page,
  .appointments-progressbar .appointments-progressbar-page,
  .frontpage-contact,
  .topical-block {
    border-color: [VALUE];
  }
  .webform-progressbar .webform-progressbar-page .webform-progressbar-page-label:after,
  .webform-progressbar .webform-progressbar-page .appointments-progressbar-page-label:after,
  .webform-progressbar .appointments-progressbar-page .webform-progressbar-page-label:after,
  .webform-progressbar .appointments-progressbar-page .appointments-progressbar-page-label:after,
  .appointments-progressbar .webform-progressbar-page .webform-progressbar-page-label:after,
  .appointments-progressbar .webform-progressbar-page .appointments-progressbar-page-label:after,
  .appointments-progressbar .appointments-progressbar-page .webform-progressbar-page-label:after,
  .appointments-progressbar .appointments-progressbar-page .appointments-progressbar-page-label:after {
    border-color: transparent transparent transparent [VALUE];
  }
  .webform-progressbar .webform-progressbar-page:first-child,
  .webform-progressbar .appointments-progressbar-page:first-child,
  .appointments-progressbar .webform-progressbar-page:first-child,
  .appointments-progressbar .appointments-progressbar-page:first-child {
    border-left: 1px solid [VALUE];
  }
  .webform-progressbar .webform-progressbar-page:last-child,
  .webform-progressbar .appointments-progressbar-page:last-child,
  .appointments-progressbar .webform-progressbar-page:last-child,
  .appointments-progressbar .appointments-progressbar-page:last-child {
    border-right: 1px solid [VALUE];
  }
');

define('DVG_DEMO_PREDEFINED_HEADING_2', '
  a:hover,
  a:focus,
  .submit-link:hover,
  .form-actions .webform-previous.form-submit:hover,
  .user-menu .menu li a:hover,
  .section-list ul li a:hover,
  .section-list.js ul li a:hover,
  .node-guide > .content ol.guide-menu li a.active,
  .node-guide > .content ol.guide-menu li a.active:visited,
  .pagernav .pager li.first a:hover,
  .pagernav .pager li.last a:hover  {
    color: [VALUE];
  }
   input[type="button"]:hover,
  input[type="reset"]:hover,
  .webform-submit:hover,
  .views-exposed-form input[type="submit"]:hover,
  .form-actions input[type="submit"]:hover,
  .btn:hover, .group-buttons .field:first-child .btn-small:hover,
  .form-actions .button-primary:hover,
  .frontpage-contact .contact-information.left .appointment-button:hover,
  input[type="button"]:active,
  input[type="reset"]:active,
  .webform-submit:active,
  .views-exposed-form input[type="submit"]:active,
  .form-actions input[type="submit"]:active,
  .btn:active,
  .group-buttons .field:first-child .btn-small:active,
  .form-actions .button-primary:active,
  .frontpage-contact .contact-information.left .appointment-button:active,
  .link-file:hover .file,
  .contact-information.left .appointment-button:hover,
  .search-block .views-exposed-form .views-exposed-widget.views-submit-button input[type="submit"]:hover {
    background-color: [VALUE];
  }
  .r-header,
  ul.tabs li:active a,
  .r-content {
    border-color: [VALUE];
  }
');

define('DVG_DEMO_PREDEFINED_HEADING_3', '
  h1 { color: [VALUE]; }
');

define('DVG_DEMO_DEFAULTS', '
  * {
    border-image: none!important;
  }
  .breadcrumb a:visited {
    color: #FFF;
  }
  .frontpage-contact,
  .webform-progressbar .webform-progressbar-page.current, .webform-progressbar .appointments-progressbar-page.current, .appointments-progressbar .webform-progressbar-page.current, .appointments-progressbar .appointments-progressbar-page.current {
    background-color: #F7F7F7;
  }
  .webform-progressbar .webform-progressbar-page.current:after, .webform-progressbar .appointments-progressbar-page.current:after, .appointments-progressbar .webform-progressbar-page.current:after, .appointments-progressbar .appointments-progressbar-page.current:after {
    border-color: rgba(0, 0, 0, 0) rgba(0, 0, 0, 0) rgba(0, 0, 0, 0) #F7F7F7;
  }
');

/**
 * Implements hook_menu().
 */
function dvg_demo_menu() {
  $items = array();

  $items['admin/appearance/colors'] = array(
    'title' => 'Colors',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('dvg_demo_css_form'),
    'access arguments' => array('administer dvg css'),
    'type' => MENU_LOCAL_TASK,
  );
  $items['dvg-demo/afspraak'] = array(
    'title' => 'Appointment',
    'page callback' => 'dvg_demo_appointment',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function dvg_demo_form_dvg_global_texts_alter(&$form, &$form_state) {
  $form['dvg_demo'] = array(
    '#type' => 'fieldset',
    '#title' => t('Demo'),
  );
  $value = variable_get('dvg_demo_digid', array('value' => '', 'format' => 'filtered_html'));
  $form['dvg_demo']['dvg_demo_digid'] = array(
    '#type' => 'text_format',
    '#title' => t('DigiD demo text'),
    '#default_value' => $value['value'],
    '#format' => $value['format'],
  );
  $form['dvg_demo']['dvg_demo_appointment'] = array(
    '#type' => 'text_format',
    '#title' => t('Appointment demo text'),
    '#default_value' => $value['value'],
    '#format' => $value['format'],
  );
}

/**
 * Implements hook_menu_alter().
 */
function dvg_menu_alter(&$items) {
  $items['user/digid'] = array(
    'title' => 'DigiD',
    'page callback' => 'dvg_demo_digid',
    'access callback' => TRUE,
    'type' => MENU_LOCAL_TASK,
    'weight' => 10,
  );
}

/**
 * Dummy callback to prevent DigiD logins.
 */
function dvg_demo_digid() {
  drupal_set_title('DigiD login');
  $text = variable_get('dvg_demo_digid', array());

  if (isset($text['value']) && !empty($text['value'])) {
    return check_markup($text['value'], $text['format']);
  }
  return t('This website is running in demo mode, this functionality has been disabled.');
}

/**
 * Dummy callback to prevent creating appointments.
 */
function dvg_demo_appointment() {
  $text = variable_get('dvg_demo_appointment', array());

  if (isset($text['value']) && !empty($text['value'])) {
    return check_markup($text['value'], $text['format']);
  }
  return t('This website is running in demo mode, this functionality has been disabled.');
}

/**
 * Implements hook_permission().
 */
function dvg_demo_permission() {
  return array(
    'administer dvg css' =>  array(
      'title' => t('Administer DVG CSS'),
      'description' => t('Change the main colors and set custom CSS.'),
    ),
  );
}

/**
 * Form page callback to administer custom colors and/or CSS.
 */
function dvg_demo_css_form() {
  $form = array();

  $form['predefined'] = array(
    '#type' => 'fieldset',
    '#title' => t('Predefined CSS selectors'),
  );
  $form['predefined']['dvg_demo_predefined_heading_1'] = array(
    '#title' => t('Maincolor'),
    '#type' => 'textfield',
    '#size' => 20,
    '#default_value' => variable_get('dvg_demo_predefined_heading_1', ''),
  );

  $form['predefined']['dvg_demo_predefined_heading_2'] = array(
    '#title' => t('Subcolor'),
    '#type' => 'textfield',
    '#size' => 20,
    '#default_value' => variable_get('dvg_demo_predefined_heading_2', ''),
  );

  $form['predefined']['dvg_demo_predefined_heading_3'] = array(
    '#title' => t('Heading 1'),
    '#type' => 'textfield',
    '#size' => 20,
    '#default_value' => variable_get('dvg_demo_predefined_heading_3', ''),
  );

  $form['misc'] = array(
    '#type' => 'fieldset',
    '#title' => t('General CSS overrides'),
  );
  $form['misc']['dvg_demo_css'] = array(
    '#title' => t('Custom CSS'),
    '#type' => 'textarea',
    '#default_value' => variable_get('dvg_demo_css', ''),
  );

  return system_settings_form($form);
}

/**
 * Implements hook_init().
 */
function dvg_demo_init() {
  if (path_is_admin(current_path()) && user_access('view the administration theme')) {
    return;
  }

  $css = array();

  foreach (array(
    'dvg_demo_predefined_heading_1' => DVG_DEMO_PREDEFINED_HEADING_1,
    'dvg_demo_predefined_heading_2' => DVG_DEMO_PREDEFINED_HEADING_2,
    'dvg_demo_predefined_heading_3' => DVG_DEMO_PREDEFINED_HEADING_3,
  ) as $var => $pattern) {
    if ($value = variable_get($var)) {
      $css[] = str_replace('[VALUE]', $value, $pattern);
    }
  }
  $css[] = DVG_DEMO_DEFAULTS;
  $css[] = variable_get('dvg_demo_css', '');

  $options = array(
    'type' => 'inline',
    'weight' => 1000,
    'group' => CSS_THEME,
  );
  drupal_add_css(implode(' ', $css), $options);
}

/**
 * Implements hook_module_implements_alter().
 */
function dvg_demo_module_implements_alter(&$implementations, $hook) {
  _dvg_global_module_implements_last('dvg_demo', array('dvg_appointment_url', 'menu_alter'), $implementations, $hook);
}

/**
 * Implements hook_dvg_appointment_url().
 */
function dvg_demo_dvg_appointment_url() {
  return 'dvg-demo/afspraak';
}
