// ___  ____      _
// |  \/  (_)    (_)
// | .  . |___  ___ _ __  ___
// | |\/| | \ \/ / | '_ \/ __|
// | |  | | |>  <| | | | \__ \
// \_|  |_/_/_/\_\_|_| |_|___/
//

@mixin respond-to($min-width, $max-width: false) {
  @if $media-queries {
    @media screen and (min-width: $min-width) {
       @if $max-width {
         @media (max-width: $max-width) {
            @content
          }
       } @else {
         @content;
       }
     }
  }
  @else {
    /* Media query content */
    @content;
  }
}

@function em($pixels, $context: $browser-context) {
  @return #{$pixels/$context}em;
}

/* Mixin for Compass - border-image
$border-image([$image-url], [$offsets], [$repeats])
Example:
@include border-image(url(../my_image.png), 10, stretch)
@include border-image(url(../my_image.png), 10 5 10 5, stretch repeat)

---------------------------------------- */
@mixin border-image($url, $offsets, $repeats) {
  @include experimental("border-image", $url $offsets $repeats, -moz, not -webkit, -o, -ms, -khtml, official);
}

// On svg capable browsers, use an svg
@mixin svg-or-not($image) {
  background-repeat: no-repeat;
  background-image: url($image + '.png');
  .svg & {
    background-image: url($image + '.svg');
  }
}
